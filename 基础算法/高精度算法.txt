高精度加法

例题:https://www.acwing.com/problem/content/793/

给定两个正整数（不含前导 0），计算它们的和。

输入格式
共两行，每行包含一个整数。

输出格式
共一行，包含所求的和。

数据范围
1≤整数长度≤100000
输入样例：
12
23
输出样例：
35

#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
vector<int> add(vector<int>& A,vector<int>& B)
{
   vector<int> C;
   int t = 0;
   for(int i = 0;i < B.size() || i < A.size() || t;i++)
   {
       if(i < A.size()) t += A[i];
       if(i < B.size()) t += B[i];
       C.push_back(t % 10);
       t /= 10;
   }

    return C;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    string a,b;
    cin >> a >> b;
    vector<int> A;
    vector<int> B;
    for(int i = a.size() - 1;i >= 0;i--) A.push_back(a[i] - '0');
    for(int i = b.size() - 1;i >= 0;i--) B.push_back(b[i] - '0');
    auto res = add(A,B);

    for(int i = res.size() - 1;i >= 0;i--)
    {
        cout << res[i];
    }
    return 0;
}

算法2 ::
#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
const int N = 100010;

vector<int> add(vector<int> A,vector<int> B)
{
    if(A.size() < B.size()) return add(B,A);
    int t = 0;
    vector<int> C;
    int i;
    for(i = 0;i < B.size();i++)
    {
        t = A[i] + B[i] + t;
        C.push_back(t % 10);
        t /= 10;
    }

    for(;i < A.size();i++)
    {
        t += A[i];
        C.push_back(t % 10);
        t /= 10;
    }
    if (t) {
        C.push_back(t);
    }
    return C;
}

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    string a,b;
    cin >> a >> b;
    vector<int> A;
    vector<int> B;
    for(int i = a.size() - 1;i >= 0;i--) A.push_back(a[i] - '0');
    for(int i = b.size() - 1;i >= 0;i--) B.push_back(b[i] - '0');
    auto res = add(A,B);

    for(int i = res.size() - 1;i >= 0;i--)
    {
        cout << res[i];
    }
    return 0;
}

高精度减法

例题:https://www.acwing.com/problem/content/794/

给定两个正整数（不含前导 0），计算它们的差，计算结果可能为负数。

输入格式
共两行，每行包含一个整数。

输出格式
共一行，包含所求的差。

数据范围
1≤整数长度≤105
输入样例：
32
11
输出样例：
21

#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
bool cmp(vector<int> &A,vector<int> &B)
{
    if(A.size() != B.size()) return A.size() > B.size();
    else
    {
        for(int i = A.size() - 1;i >= 0;i--)
        {
            if(A[i] > B[i]) return true;
            if(A[i] < B[i]) return false;
        }
        return true;
    }
}
vector<int> Sub(vector<int> &A,vector<int> &B)
{
    int t = 0;
    vector<int> C;
    for(int i = 0;i < A.size();i++)
    {
        t = A[i] - t; 
        if(i < B.size()) t -= B[i]; 
        C.push_back((t + 10) % 10);
        if(t < 0) t = 1;
        else t = 0;
    }
    
    while(C.size() > 1 && C.back() == 0) C.pop_back();
    return C;
}


int main()
{
    string a,b;
    cin >> a >> b;
    vector<int> A,B;
    for(int i = a.size() - 1;i >= 0;i--) A.push_back(a[i] - '0');
    for(int i = b.size() - 1;i >= 0;i--) B.push_back(b[i] - '0');
    vector<int> C;
    if(cmp(A,B))
    {
        C = Sub(A,B);
        
    }
    else 
    {
        cout << "-";
        C = Sub(B,A);
        
    }
    for(int i = C.size() - 1;i >= 0;i--) cout << C[i];
    cout << endl;
    
    
    return 0;
}


高精度乘法

例题:https://www.acwing.com/problem/content/795/

给定两个非负整数（不含前导 0） A 和 B，请你计算 A×B 的值。

输入格式
共两行，第一行包含整数 A，第二行包含整数 B。

输出格式
共一行，包含 A×B 的值。

数据范围
1≤A的长度≤100000,
0≤B≤10000
输入样例：
2
3
输出样例：
6

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> Mul(vector<int> A,int b)
{
    int t = 0;
    vector<int> c;
    for(int i = 0;i < A.size() || t;i++)
    {
       if(i < A.size()) t += A[i] * b;
       c.push_back(t % 10);
       t /= 10;
    }
    while(c.size() > 1 && c.back() == 0) c.pop_back();
    return c;
}
int main()
{
    string a;
    int b;
    cin >> a >> b;
    vector<int> A;
    for(int i = a.size() - 1;i >= 0;i--) A.push_back(a[i] - '0');
    auto res = Mul(A,b);
    for(int i = res.size() - 1;i >= 0;i--) cout << res[i];
    cout << endl;
    
}

高精度除法

例题:https://www.acwing.com/problem/content/796/

给定两个非负整数（不含前导 0） A，B，请你计算 A/B 的商和余数。

输入格式
共两行，第一行包含整数 A，第二行包含整数 B。

输出格式
共两行，第一行输出所求的商，第二行输出所求余数。

数据范围
1≤A的长度≤100000,
1≤B≤10000,
B 一定不为 0
输入样例：
7
2
输出样例：
3
1

#include <iostream>
#include <algorithm>
using namespace std;
#include <vector>

vector<int> Div(vector<int> A,int b,int &r)
{
    r = 0;
    vector<int> C;
    for(int i = A.size() - 1;i >= 0;i--)
    {
        r = r * 10 + A[i];
        C.push_back(r / b);
        r %= b;
    }
    
    reverse(C.begin(),C.end());
    while(C.size() > 1 && C.back() == 0) C.pop_back();
    return C;
}
int main()
{
    string a;
    int b;
    cin >> a >> b;
    vector<int> A;
    for(int i = a.size() - 1;i >= 0;i--) A.push_back(a[i] - '0');
    int r;
    auto res = Div(A,b,r);
    for(int i = res.size() - 1;i >= 0;i--) cout << res[i];
    cout << endl;
    cout << r << endl;
    
    
    
    return 0;
}