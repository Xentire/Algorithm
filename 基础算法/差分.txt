一维差分

例题:https://www.acwing.com/problem/content/799/

输入一个长度为 n 的整数序列。

接下来输入 m 个操作，每个操作包含三个整数 l,r,c，表示将序列中 [l,r] 之间的每个数加上 c。

请你输出进行完所有操作后的序列。

输入格式
第一行包含两个整数 n 和 m。

第二行包含 n 个整数，表示整数序列。

接下来 m 行，每行包含三个整数 l，r，c，表示一个操作。

输出格式
共一行，包含 n 个整数，表示最终序列。

数据范围
1≤n,m≤100000,
1≤l≤r≤n,
−1000≤c≤1000,
−1000≤整数序列中元素的值≤1000
输入样例：
6 3
1 2 2 1 2 1
1 3 1
3 5 1
1 6 1
输出样例：
3 4 5 3 4 2

#include <iostream>
#include <algorithm>
using namespace std;
int n,m;
const int N = 1e5 + 10;
int Sub[N];

void Insert(int l,int r,int c) //Insert可以构造差分数组 差分可以在1的时间复杂度以内来对某个区间加上或者减去一个数字 通过这个性质也可以来构造差分数组
{
    Sub[l] += c;
    Sub[r + 1] -= c;
}

int main()
{
    cin >> n >> m;
    for(int i = 1;i <= n;i++) 
    {
        int x;
        cin >> x;
        Insert(i,i,x);
    }

    while(m--)
    {
        int l,r,c;
        cin >> l >> r >> c;
        Insert(l,r,c);
    }
    
    for(int i = 1;i <= n;i++)
    {
        Sub[i] += Sub[i - 1];
        cout << Sub[i] << " ";
    }
    cout << endl;
    
    
    
    return 0;
}

二维差分

例题:https://www.acwing.com/problem/content/800/

输入一个 n 行 m 列的整数矩阵，再输入 q 个操作，每个操作包含五个整数 x1,y1,x2,y2,c，其中 (x1,y1) 和 (x2,y2) 表示一个子矩阵的左上角坐标和右下角坐标。

每个操作都要将选中的子矩阵中的每个元素的值加上 c。

请你将进行完所有操作后的矩阵输出。

输入格式
第一行包含整数 n,m,q。

接下来 n 行，每行包含 m 个整数，表示整数矩阵。

接下来 q 行，每行包含 5 个整数 x1,y1,x2,y2,c，表示一个操作。

输出格式
共 n 行，每行 m 个整数，表示所有操作进行完毕后的最终矩阵。

数据范围
1≤n,m≤1000,
1≤q≤100000,
1≤x1≤x2≤n,
1≤y1≤y2≤m,
−1000≤c≤1000,
−1000≤矩阵内元素的值≤1000
输入样例：
3 4 3
1 2 2 1
3 2 2 1
1 1 1 1
1 1 2 2 1
1 3 2 3 2
3 1 3 4 1
输出样例：
2 3 4 1
4 3 4 1
2 2 2 2

#include <iostream>
#include <algorithm>
using namespace std;
int n,m,q;
const int N = 1e3 + 10;
int Sub[N][N];

void Insert(int x1,int y1,int x2,int y2,int value)
{						//差分数组会时这个下标及以后的所有下标全都加上或者减去某个数  想要构造差分数组只需要在当前下标的后一个下标范围内减去此数
    Sub[x1][y1] += value;
    Sub[x2 + 1][y1] -= value;
    Sub[x1][y2 + 1] -= value;
    Sub[x2 + 1][y2 + 1] += value;
}

int main()
{
    cin >> n >> m >> q;
    for(int i = 1;i <= n;i++)
    {
        for(int j = 1;j <= m;j++)
        {
            int x;
            cin >> x;
            Insert(i,j,i,j,x);
        }
    }
    
    while(q--)
    {
        int x1,y1,x2,y2,c;
        cin >> x1 >> y1 >> x2 >> y2 >> c;
        Insert(x1,y1,x2,y2,c);
        
    }
    for(int i = 1;i <= n;i++)
    {
        for(int j = 1;j <= m;j++)
        {
            Sub[i][j] += - Sub[i - 1][j - 1] + Sub[i][j - 1] + Sub[i - 1][j];
            cout << Sub[i][j] << " ";
        }
        cout << endl;
    }
    
    return 0;
}


相关知识笔记:
差分数组的前缀和即是原数组 