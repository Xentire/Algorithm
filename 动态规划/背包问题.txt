01背包

例题:https://www.acwing.com/problem/content/2/

有 N 件物品和一个容量是 V 的背包。每件物品只能使用一次。

第 i 件物品的体积是 vi，价值是 wi。

求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。
输出最大价值。

输入格式
第一行两个整数，N，V，用空格隔开，分别表示物品数量和背包容积。

接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 件物品的体积和价值。

输出格式
输出一个整数，表示最大价值。

数据范围
0<N,V≤1000
0<vi,wi≤1000
输入样例
4 5
1 2
2 4
3 4
4 5
输出样例：
8

#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 1e3 + 10;
int arr[N];
int n,m;

int main()
{
    cin >> n >> m;
    for(int i = 1;i <= n;i++)
    {
        int v,w;
        cin >> v >> w;
        for(int j = m;j >= v;j--)
        {
            arr[j] = max(arr[j],arr[j - v] + w);
        }
    }
    cout << arr[m] << endl;
    return 0;
}

算法核心:
每一次迭代只会用到上一层的状态 所以二维数组可以优化为一维数组
从大到小枚举体积是因为小体积存的是上一个状态的价值 而我们需要用到上一个状态所以需要从大到小枚举
arr[j] 表示总体积为j的可以获取的最大价值

完全背包

例题:https://www.acwing.com/problem/content/3/

有 N 种物品和一个容量是 V 的背包，每种物品都有无限件可用。

第 i 种物品的体积是 vi，价值是 wi。

求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且总价值最大。
输出最大价值。

输入格式
第一行两个整数，N，V，用空格隔开，分别表示物品种数和背包容积。

接下来有 N 行，每行两个整数 vi,wi，用空格隔开，分别表示第 i 种物品的体积和价值。

输出格式
输出一个整数，表示最大价值。

数据范围
0<N,V≤1000
0<vi,wi≤1000
输入样例
4 5
1 2
2 4
3 4
4 5
输出样例：
10

一维优化表示:
#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 1e3 + 10;
int dp[N];
int n,m;

int main()
{
    cin >> n >> m;
    for(int i = 1;i <= n;i++)
    {
        int v,w;
        cin >> v >> w;
        for(int j = v;j <= m;j++)
        {
            dp[j] = max(dp[j],dp[j - v] + w);
        }
    }
    cout << dp[m] << endl;
    return 0;
}
二维朴素表示
#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 1e3 + 10;
int dp[N][N];
int n,m;

int main()
{
    cin >> n >> m;
    for(int i = 1;i <= n;i++)
    {
        int v,w;
        cin >> v >> w;
        for(int j = 0;j <= m;j++)
        {
            dp[i][j] = dp[i - 1][j];
            if(j >= v) dp[i][j] = max(dp[i][j],dp[i][j - v] + w);
        }
    }
    cout << dp[n][m] << endl;
    return 0;
}

算法核心:
二维朴素的i j分别表示从前i个物品当中选总体积不超过j的可获取的最大价值
一维表示总体积不超过j的最大价值
完全背包需要从小到大来枚举是因为需要用到当前层的状态而不是上一层 因为可以一直选择同一个物品